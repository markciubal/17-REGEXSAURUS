<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>REGEXSAURUS</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Rubik+Moonrocks&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/css/style.css" />
</head>
<body>
    <main>
        <div class="row justify-content-center align-items-center text-center">
            <div class="col">
                <h1>REGEXSAURUS</h1>
                <h2>Type in JavaScript REGEX and we'll devour it!</h2>
                <form class="regex-form m-3">
                  <textarea id="regex" class="m-2 w-100 mx-auto">/^#?([a-f0-9]{6}|[a-f0-9]{3})$/</textarea>
                  <button class="btn btn-light mx-auto" id="devour-button" type="submit">
                    <span class="spinner-border spinner-border-sm" role="status" id="devour-spinner" style="display: none;"></span>
                    <span id="devour-text">Devour</span>
                  </button>
                </form>
                <h2>REGEX Explanation</h2>
                <pre class="w-100" id="regex-output">REGEX can be simple, and it can be difficult. Hopefully this interacive guide can help clarify the concept.<br/>
You can tell if something is REGEX in JavaScript when it is sandwitched between two forward slashes: / and /.<br/>
After that, the inside is just a bunch of letters, numbers, and symbols that represent different patterns.<br/>
To start a pattern, you will use a ^ (caret) character. To end a pattern, use the $ character. So to put together what we've learned so far, REGEX can look like /^ to start, and to end: $/.
After that, it's more symbols! [a-z] means any letter, a through z, lowercase. [A-Z] means the same, but uppercase. To put them together, you'd use [a-zA-Z].<br/>
We can start to look at patterns and get a good understanding of more REGEX rules by breaking down a pattern.<br/>
A basic one identifies possible hexadecimal values for colors: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/<br/>
Like we learned before, a pattern starts matching with /^ and ends with $/.<br/>
Then, the # sign is a literal # symbol, the ? next to it indicating that the sign is optional.<br/>
Then, the parentheses indicates a pattern grouping of either a-f, 0-9 repeating either 6 times, annotated by {6}, or 3 times, annotated by {3}.<br/>
Use the text box above to use the rules below, and through practice you can start to see and create REGEX patterns more easily!
                </pre>
            </div>
        </div>
    </main>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz" crossorigin="anonymous"/></script>
    <script src="/js/regexsaurus.js"></script>
</body>
</html>